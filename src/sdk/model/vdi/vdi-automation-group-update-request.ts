import { VdiAutomationGroupUpdateRequestJson } from './__json__/vdi-automation-group-update-request-json';
import { NetworkConnectionType } from './network-connection-type';

/**
 * VDI Automation Group Update Request.
 */
/* istanbul ignore next: autogenerated */
export class VdiAutomationGroupUpdateRequest {

  private readonly _json: VdiAutomationGroupUpdateRequestJson;

  constructor(vdiAutomationGroupUpdateRequest: VdiAutomationGroupUpdateRequest);
  constructor(vdiAutomationGroupUpdateRequestJson: VdiAutomationGroupUpdateRequestJson);
  constructor(name: string, description: string, vappTemplateUuid: string, deploymentVdcUuid: string,
              orgVdcNetworkUuid: string, domainToJoin: string, defaultTeams: Array<string>, defaultUsers: Array<string>,
              edgeUuid: string, publicIp: string, networkConnectionType: NetworkConnectionType,
              joinDomainEnabled: boolean, domainUserName: string, domainUserPassword: string,
              guestPasswordResetRequired: boolean);
  constructor(firstParam: string | VdiAutomationGroupUpdateRequest | VdiAutomationGroupUpdateRequestJson,
              description?: string, vappTemplateUuid?: string, deploymentVdcUuid?: string, orgVdcNetworkUuid?: string,
              domainToJoin?: string, defaultTeams?: Array<string>, defaultUsers?: Array<string>, edgeUuid?: string,
              publicIp?: string, networkConnectionType?: NetworkConnectionType, joinDomainEnabled?: boolean,
              domainUserName?: string, domainUserPassword?: string, guestPasswordResetRequired?: boolean) {
    if (typeof firstParam === 'string') {
      // Parameters constructor
      this._json = {
        name: firstParam,
        description: description,
        vapp_template_uuid: vappTemplateUuid,
        deployment_vdc_uuid: deploymentVdcUuid,
        org_vdc_network_uuid: orgVdcNetworkUuid,
        domain_to_join: domainToJoin,
        default_teams: defaultTeams,
        default_users: defaultUsers,
        edge_uuid: edgeUuid,
        public_ip: publicIp,
        network_connection_type: networkConnectionType,
        join_domain_enabled: joinDomainEnabled,
        domain_user_name: domainUserName,
        domain_user_password: domainUserPassword,
        guest_password_reset_required: guestPasswordResetRequired
      } as VdiAutomationGroupUpdateRequestJson;
    } else if (firstParam instanceof VdiAutomationGroupUpdateRequest) {
      // Copy constructor
      this._json = (firstParam as VdiAutomationGroupUpdateRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as VdiAutomationGroupUpdateRequestJson;
    }
  }

  /**
   * Get name.
   * @returns {string}
   */
  get name(): string {
    return this._json.name;
  }

  /**
   * Get description.
   * @returns {string}
   */
  get description(): string {
    return this._json.description;
  }

  /**
   * Get vapp template uuid.
   * @returns {string}
   */
  get vappTemplateUuid(): string {
    return this._json.vapp_template_uuid;
  }

  /**
   * Get deployment vdc uuid.
   * @returns {string}
   */
  get deploymentVdcUuid(): string {
    return this._json.deployment_vdc_uuid;
  }

  /**
   * Get org vdc network uuid.
   * @returns {string}
   */
  get orgVdcNetworkUuid(): string {
    return this._json.org_vdc_network_uuid;
  }

  /**
   * Get domain to join.
   * @returns {string}
   */
  get domainToJoin(): string {
    return this._json.domain_to_join;
  }

  /**
   * Get default teams.
   * @returns {Array<string>}
   */
  get defaultTeams(): Array<string> {
    return this._json.default_teams;
  }

  /**
   * Get default users.
   * @returns {Array<string>}
   */
  get defaultUsers(): Array<string> {
    return this._json.default_users;
  }

  /**
   * Get edge uuid.
   * @returns {string}
   */
  get edgeUuid(): string {
    return this._json.edge_uuid;
  }

  /**
   * Get public ip.
   * @returns {string}
   */
  get publicIp(): string {
    return this._json.public_ip;
  }

  /**
   * Get network connection type.
   * @returns {NetworkConnectionType}
   */
  get networkConnectionType(): NetworkConnectionType {
    return this._json.network_connection_type;
  }

  /**
   * Get join domain enabled.
   * @returns {boolean}
   */
  get joinDomainEnabled(): boolean {
    return this._json.join_domain_enabled;
  }

  /**
   * Get domain user name.
   * @returns {string}
   */
  get domainUserName(): string {
    return this._json.domain_user_name;
  }

  /**
   * Get domain user password.
   * @returns {string}
   */
  get domainUserPassword(): string {
    return this._json.domain_user_password;
  }

  /**
   * Get guest password reset required.
   * @returns {boolean}
   */
  get guestPasswordResetRequired(): boolean {
    return this._json.guest_password_reset_required;
  }

  /**
   * Get the json representation of this class.
   * @returns {VdiAutomationGroupUpdateRequestJson}
   */
  get json(): VdiAutomationGroupUpdateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
